% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/native_format.R
\name{native_format}
\alias{native_format}
\title{Convert a vector to the structure used in model}
\usage{
native_format(v, row_names = T, sub_name = "")
}
\arguments{
\item{v}{a vector with names indicating its elements' appropriate placement in a new object.
For example, say you have a 2x2 matrix \code{m} in your JAGS model. \code{summ_post(post, "m")} provides
a matrix made up of 5 rows (summary stats) and 4 columns (the elements of the matrix).
Running \code{native_format(v = summ_post(post, "m")["mean",])} will return a 2x2
matrix with the posterior means of each element stored in the appropriate place.}

\item{row_names}{logical. Do you want to have row names that reflect the node of interest
inserted? Defaults to \code{TRUE}.}

\item{sub_name}{a character vector of length 1. If you wish to include a suffix (e.g., "_mean")
after the column and row names in the object. Ignored if \code{row_names = FALSE}.}
}
\description{
This function unvectorizes output based on the element names.
}
\details{
By "vectorized", I mean that if in your model you if you have a matrix \code{m},
in the summary you will get output stored like \code{m[1,1]; m[2,1], etc.}. If you have a vector
with these names, this function turns that vector into a matrix with the elements stored in the
appropriate place. This is sometimes useful for plotting or quick comparisons of values,
because the programmer thinks in terms of the way the model is storing the elements,
which is not necessarily the same as the way it is stored in the summary.
Currently up to five dimensions are supported (\code{x[,,,,]}.
If more are desired, please submit an issue on the GitHub repository and I'm happy to add them.
}
